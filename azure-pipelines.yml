trigger:
  - main

variables:
  - group: GitHub
  - name: PATH
    value: $(Agent.TempDirectory)/codeql:/usr/local/go/bin:/usr/bin:/bin

pool:
  vmImage: 'ubuntu-latest'

jobs:
  - job: Mirror
    steps:
      - checkout: self
        fetchDepth: 0
      - script: |
          set -euo pipefail

          git checkout main
          git config --global user.email "ado@noreply.github.com"
          git config --global user.name "azure-pipelines"
          git push https://$(PAT)@github.com/department-of-veterans-affairs/ado-codeql-sample main --force
        displayName: 'Push to GitHub'

  - job: 'Scan Go'
    dependsOn: Mirror
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: GoTool@0
        inputs:
          version: '1.22'

      - checkout: self
        fetchDepth: 0

      - script: |
          set -euo pipefail
          
          echo "Evaluating latest CodeQL version"
          id=$(curl --insecure --silent --retry 3 --location \
            --header "$(PAT)" \
            --header "Accept: application/vnd.github.raw" \
            "https://api.github.com/repos/github/codeql-action/contents/src/defaults.json" | jq -r .bundleVersion)
          echo "Latest CodeQL version is $id"
          
          echo "Downloading CodeQL bundle"
          curl --insecure --silent --retry 3 --location --output "$(Agent.TempDirectory)/codeql.tgz" \
            --header "$(PAT)" \
            "https://github.com/github/codeql-action/releases/download/${id}/codeql-bundle-linux64.tar.gz"
          echo "Extracting CodeQL bundle"
          tar -xf "$(Agent.TempDirectory)/codeql.tgz" --directory "$(Agent.TempDirectory)"
          echo "CodeQL bundle extracted"
          echo "Cleaning up CodeQL tarball"
          rm "$(Agent.TempDirectory)/codeql.tgz"
        displayName: 'Install CodeQL'

      - script: |
          set -euo pipefail
          
          echo "Initializing database"
          codeql database create $(Agent.TempDirectory)/db --language=go
        displayName: 'Initialize CodeQL Database'

      - script: |
          set -euo pipefail
          
          echo "Building application"
          go build -o cli
        displayName: 'Build the Go application'

      - script: |
          set -euo pipefail
          
          echo "Analyzing database"
          codeql database analyze $(Agent.TempDirectory)/db \
            --sarif-category=go --format=sarif-latest \
            --output=$(Agent.TempDirectory)/results.sarif
        displayName: 'Analyze the Go application'

      - script: |
          set -euo pipefail
          
          echo "Uploading SARIF file"
          commit=$(git rev-parse HEAD)
          codeql github upload-results \
            --github-url="https://github.com/" \
            --repository="department-of-veterans-affairs/ado-codeql-sample" \
            --ref="$(Build.SourceBranch)" \
            --commit="${commit}" \
            --sarif="$(Agent.TempDirectory)/results.sarif"
          echo "SARIF file uploaded"
        displayName: 'Upload SARIF to GitHub'
        env:
          GITHUB_TOKEN: $(PAT)