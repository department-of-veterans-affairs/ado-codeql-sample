trigger:
  - main

variables:
  - group: GitHub
  - name: PATH
    value: $(Agent.TempDirectory)/codeql:/usr/local/go/bin:/usr/bin:/bin

pool:
  vmImage: 'ubuntu-latest'

steps:
  - task: GoTool@0
    inputs:
      version: '1.22'

  - name: 'Push to GitHub'
    script: |
      git config --global user.email "ado@noreply.github.com"
      git config --global user.name "azure-pipelines"
      git push https://github.com/department-of-veterans-affairs/ado-code-sample main --force

  - name: 'Install CodeQL'
    script: |
      set -euo pipefail
      
      echo "Evaluating latest CodeQL version"
      id=$(curl --insecure --silent --retry 3 --location \
        --header "$(PAT)" \
        --header "Accept: application/vnd.github.raw" \
        "https://api.github.com/repos/github/codeql-action/contents/src/defaults.json" | jq -r .bundleVersion)
      echo "Latest CodeQL version is $id"
      
      echo "Downloading CodeQL bundle"
      curl --insecure --silent --retry 3 --location --output "$(Agent.TempDirectory)/codeql.tgz" \
        --header "$(PAT)" \
        "https://github.com/github/codeql-action/releases/download/${id}/codeql-bundle-linux64.tar.gz"
      echo "Extracting CodeQL bundle"
      tar -xf "$(Agent.TempDirectory)/codeql.tgz" --directory "$(Agent.TempDirectory)"
      echo "CodeQL bundle extracted"
      echo "Cleaning up CodeQL tarball"
      rm "$(Agent.TempDirectory)/codeql.tgz"

  - name: 'Initialize CodeQL Database'
    script: |
      echo "Initializing database"
      codeql database create $(Agent.TempDirectory)/db --language=go

  - name: 'Build the Go application'
    script: |
      go build -o cli
      ./cli "echo hello"

  - name: 'Analyze the Go application'
    script: |
      echo "Analyzing database"
      codeql database analyze $(Agent.TempDirectory)/db --format=sarif-latest --output=$(Agent.TempDirectory)/results.sarif

  - name: 'Upload SARIF to GitHub'
    script: |
      echo "Uploading SARIF file"
      commit=$(git rev-parse HEAD)
      github upload-results \
        --repository="department-of-veterans-affairs/ado-code-sample" \
        --ref="main" \
        --commit="${commit}" \
        --sarif="$(Agent.TempDirectory)/results.sarif"
      echo "SARIF file uploaded"
    env:
      GITHUB_TOKEN: $(PAT)